---
format_version: '8'
default_step_lib_source: 'https://github.com/bitrise-io/bitrise-steplib.git'
project_type: android
trigger_map:
  - push_branch: '*'
    workflow: primary
workflows:
  primary:
    steps:
      - script@1:
          inputs:
            - content: |-
                #!/usr/bin/env bash
                /opt/android-sdk-linux/tools/bin/sdkmanager "--verbose" "--channel=0" "emulator"
                /opt/android-sdk-linux/tools/bin/sdkmanager "--verbose" "system-images;android-30;google_apis_playstore;x86"
                /opt/android-sdk-linux/cmdline-tools/tools/bin/avdmanager "--verbose" "create" "avd" "--force" "--name" "emulator" "--device" "pixel_2" "--package" "system-images;android-30;google_apis_playstore;x86" "--tag" "google_apis_playstore" "--abi" "x86" "--sdcard" "512M"
/opt/android-sdk-linux/emulator/emulator "@emulator" "-verbose" "-show-kernel" "-no-audio" "-no-window" "-no-boot-anim" "-netdelay" "none" "-no-snapshot" "-wipe-data" "-gpu" "swiftshader_indirect" "-camera-back" "none" "-camera-front" "none"
      - avd-manager@1:
          inputs:
            - tag: google_apis_playstore
            - profile: pixel_2
            - api_level: '30'
      - activate-ssh-key@4:
          run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
      - git-clone@4: {}
      - script@1:
          inputs:
            - content: './gradlew app:tasks'
            - working_dir: $BITRISE_SOURCE_DIR
      - cache-pull@2: {}
      - install-missing-android-tools@2:
          inputs:
            - gradlew_path: ./gradlew
      - wait-for-android-emulator@1: {}
      - script@1:
          inputs:
            - content: ./gradlew cAT
      - cache-push@2: {}
      - deploy-to-bitrise-io@1:
          inputs:
            - is_enable_public_page: 'false'
  test:
    steps:
      - avd-manager@1:
          inputs:
            - api_level: '30'
      - wait-for-android-emulator@1: {}
      - script@1:
          inputs:
            - content: |-
                #!/usr/bin/env bash
                cd ~/.android/avd
                pwd
                ls -a
                cat emulator.ini
                echo "#######################"
                cd emulator.avd
                cat config.ini
                echo "#######################"
                cat emulator-user.ini
                echo "#######################"
                cat hardware-qemu.ini
